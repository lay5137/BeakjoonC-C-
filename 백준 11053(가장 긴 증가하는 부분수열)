#include <iostream>
#include <algorithm>
using namespace std;

// 가장 긴 증가하는 부분수열 : 현재 값보다 작은 숫자들이 갖는 부분수열 중 가장 긴 부분수열 + 1

int arr[1001];
int dp[1001];

int main(void) {
    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int n, ans = 1;
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> arr[i];

    for (int i = 1; i <= n; i++) {
        dp[i] = 1; // 자기자신이 부분수열일 경우에는 항상 길이가 1임
        for (int j = i - 1; j >= 1; j--) {
            if (arr[i] > arr[j]) { // 현재 i값이 i-1 ~ 1 번째 값보다 큰 경우
                dp[i] = max(dp[i], dp[j] + 1); // dp[i] 값이 i-1 ~ 1 번째 값들 중 가장 긴 부분수열로 계속 초기화 됨
            }
        }
        ans = max(ans, dp[i]); // dp[i]값과 이전 부분수열 중 더 긴 것으로 ans 값 초기화
    }
    cout << ans;
}
