#include <iostream>
#include <algorithm>
#include <queue>
#define SIZE 1001
using namespace std;

int n, m, v;
int map[SIZE][SIZE];
bool visited[SIZE];
queue<int> q;

void reset() { //visited 초기화
    for (int i = 1; i <= n; i++)
        visited[i] = false;
}

void dfs(int v) { //깊이 우선 탐색
    cout << v << " ";
    visited[v] = true;
    for (int i = 1; i <= n; i++) {
        if (map[v][i] == 1 && visited[i] == false) {
            dfs(i);
        }
    }
}

void bfs(int v) { //넓이 우선 탐색
    visited[v] = true;
    cout << v << " ";
    q.push(v);
    while (!q.empty()) {
        v = q.front();
        q.pop();
        for (int i = 1; i <= n; i++) {
            if (map[v][i] == 1 && visited[i] == false) {
                q.push(i);
                visited[i] = true;
                cout << i << " ";
            }
        }
    }
}

int main() {
    cin >> n >> m >> v;
    for (int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        map[a][b] = 1;
        map[b][a] = 1;
    }
    reset();
    dfs(v);
    cout << endl;
    reset();
    bfs(v);
}
