#include <iostream>
#include <algorithm>
using namespace std;

char arr[50][50];

int main(void) {
    ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

    char chess_W[8][8]; // W로 시작하는 정답 판
    char chess_B[8][8]; // B로 시작하는 정답 판
    int n, m, flag = 1, cnt_W, cnt_B, cnt_min = 64;
    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> arr[i][j];
        }
    }

    for (int i = 0; i < 8; i++) {
        for (int j = 0; j < 8; j++) {
            if (flag == 1) {
                chess_W[i][j] = 'W';
                chess_B[i][j] = 'B';
            }
            else {
                chess_W[i][j] = 'B';
                chess_B[i][j] = 'W';
            }
            flag *= -1; // 번갈아 가며 값을 넣기 위함
        }
        flag *= -1; // 줄을 바꿨을 때 값이 바뀌지 않게 하기 위함
    }

    for (int i = 0; i <= n - 8; i++) {
        for (int j = 0; j <= m - 8; j++) {
            cnt_W = cnt_B = 0; // 범위를 자를 때 마다 cnt값 초기화
            for (int k = 0; k < 8; k++) {
                for (int l = 0; l < 8; l++) {
                    if (arr[i + k][j + l] != chess_W[k][l]) cnt_W++;
                    if (arr[i + k][j + l] != chess_B[k][l]) cnt_B++; // 정답 판과 같지 않다면 cnt++
                }
            }
            cnt_min = min(cnt_min, min(cnt_W, cnt_B));
        }
    }
    cout << cnt_min;
}
